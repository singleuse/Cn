//1. Implement the data link layer framing methods such as character, character-stuffing and bit stuffing.
//a.bit stuffing
#include<stdio.h>
#include<string.h>
void main()
{
char a[50],b[50];
int i=0,j=8,k,count,n;
printf("Enter Input fram (0's & 1's only):\n");
gets(a);
n=strlen(a);
strcpy(b,"01111110");
while(i<n)
{
count=1;
if(a[i]='1')
{
b[j]=a[i];
for(k=i+1;a[k]=='1' && k<n && count<5;k++)
{
j++;
b[j]=a[k];
count++;
if(count==5)
{
j++;
b[j]='/0';
}
i=k;
}
}
else
{
b[j]=a[i];
}
i++;
j++;
}
b[j]='\0';
strcat(b,"01111110");
printf("After stuffing the frame is:\n");
puts(b);
}


  //b character-stuffing
  #include<stdio.h>
#include<string.h>
void main(){
char c[100],d[100];
int i,j,n;
printf("\nEnter the input frame:\n");
gets(c);
n=strlen(c);
d[0]='s';
d[1]='t';
d[2]='x';
for(i=0,j=3;i<n;i++,j++)
{
if((c[i]=='d' && c[i+1]=='1' &&c[i+2]=='e'))
{
d[j]='d';
j++;
d[j]='1';
j++;
n=n+3;
}
else if((c[i]=='s' && c[i+1]=='t' && c[i+2]=='X'))
{
d[j]='s';
j++;
d[j]='t';
j++;
d[j]='x';
j++;
n=n+3;
}
else if((c[i]=='e' && c[i+1]=='t' && c[i+2]=='x'))
{
d[j]='e';
j++;
d[j]='t';

j++;
d[j]='x';
j++;
n=n+3;
}
d[j]=c[i];
}
n=n+2;
n++;
d[n]='e';
n++;
d[n]='t';
n++;
d[n]='x';
n++;
d[n]='\0';
printf("\n \n after character stuff the frame is :\n");
puts(d);
}


//Write a program to compute CRC code for the polynomials CRC-12, CRC-16 and CRC CCIP
#include <stdio.h>
 #include <string.h>
 void main() {
	int i,j,keylen,msglen;
	char input[100], key[30],temp[30],quot[100],rem[30],key1[30];
	printf("Enter Data: ");
	gets(input);
	printf("Enter Key: ");
	gets(key);
	keylen=strlen(key);
	msglen=strlen(input);
	strcpy(key1,key);
	for (i=0;i<keylen-1;i++) {
		input[msglen+i]='0';
	}
	for (i=0;i<keylen;i++)
	 temp[i]=input[i];
	for (i=0;i<msglen;i++) {
		quot[i]=temp[0];
		if(quot[i]=='0')
		 for (j=0;j<keylen;j++)
		 key[j]='0'; else
		 for (j=0;j<keylen;j++)
		 key[j]=key1[j];
		for (j=keylen-1;j>0;j--) {
			if(temp[j]==key[j])
			 rem[j-1]='0'; else
			 rem[j-1]='1';
		}
		rem[keylen-1]=input[i+keylen];
		strcpy(temp,rem);
	}
	strcpy(rem,temp);
	printf("\nQuotient is ");
	for (i=0;i<msglen;i++)
	 printf("%c",quot[i]);
	printf("\nRemainder is ");
	for(i=0;i<keylen-1;i++)
        printf("%c",rem[i]);
	printf("\nFinal data is: ");
	for (i=0;i<msglen;i++)
	 printf("%c",input[i]);
	for (i=0;i<keylen-1;i++)
	 printf("%c",rem[i]);
}

//Implement Dijsktraâ€™s algorithm to compute the shortest path through a network

